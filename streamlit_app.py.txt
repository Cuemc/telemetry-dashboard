# streamlit_app.py
import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="RaceTelemetry Insights", layout="wide")
st.title("üèéÔ∏è RaceTelemetry Insights")

# --- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å ---
with st.sidebar:
    st.header("üîß –§–∏–ª—å—Ç—Ä—ã")
    driver = st.selectbox("–ü–∏–ª–æ—Ç", ["–ü–∏–ª–æ—Ç –ê", "–ü–∏–ª–æ—Ç –ë"])
    lap = st.slider("–ö—Ä—É–≥", 1, 50, 10)
    session = st.selectbox("–°–µ—Å—Å–∏—è", ["–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è", "–ì–æ–Ω–∫–∞", "FP1"])
    compare = st.selectbox("–°—Ä–∞–≤–Ω–∏—Ç—å —Å", ["–≠—Ç–∞–ª–æ–Ω", "–ü–∏–ª–æ—Ç –ë"])
    st.markdown("---")
    st.markdown("### üì§ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
    if st.button("–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"):
        st.experimental_rerun()
    st.info("–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.")

# --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö ---
np.random.seed(lap)
distance = np.linspace(0, 5600, 1000)  # 5.6 –∫–º ‚Äî —Ç–∏–ø–∏—á–Ω–∞—è —Ç—Ä–∞—Å—Å–∞

# –°–∫–æ—Ä–æ—Å—Ç—å: —ç—Ç–∞–ª–æ–Ω + —à—É–º + –¥–µ–≥—Ä–∞–¥–∞—Ü–∏—è
speed_ref = 320 - 150 * np.sin(distance / 300)
speed_curr = speed_ref - np.random.normal(5, 4, len(distance)) + (lap - 5) * 0.4
delta_time = np.cumsum((speed_ref - speed_curr) / 3600 * 0.1)

# –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —à–∏–Ω (—Ä–∞—Å—Ç—ë—Ç —Å –∫—Ä—É–≥–æ–º)
temp_fl = 85 + lap * 2.3 + np.random.randn()

# --- –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ ---
st.markdown("### üìä –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏")
col1, col2, col3, col4 = st.columns(4)
col1.metric("–í—Ä–µ–º—è –∫—Ä—É–≥–∞", f"{92.3 + lap * 0.12:.3f} —Å", delta=f"+{delta_time[-1]:.3f} —Å")
col2.metric("Delta-time", f"{delta_time[-1]:.3f} —Å", delta="–æ—Ç —ç—Ç–∞–ª–æ–Ω–∞", delta_color="inverse")
col3.metric("–¢–µ–º–ø. –ü–ü–®", f"{temp_fl:.0f}¬∞C", delta="üìà", delta_color="inverse" if temp_fl > 115 else "normal")
col4.metric("G_max (–ø–æ–ø–µ—Ä–µ—á–Ω–æ–µ)", f"{4.1 - lap * 0.03:.2f} G")

# --- –ö–∞—Ä—Ç–∞ —Ç—Ä–∞—Å—Å—ã ---
st.markdown("### üó∫Ô∏è –¢—Ä–∞–µ–∫—Ç–æ—Ä–∏—è –Ω–∞ —Ç—Ä–∞—Å—Å–µ")
fig1, ax1 = plt.subplots(figsize=(8, 6))
track_x = 3000 + 2000 * np.cos(distance / 5600 * 2 * np.pi)
track_y = 2500 + 1500 * np.sin(distance / 5600 * 2 * np.pi)
ax1.plot(track_x, track_y, color='gray', linewidth=10, label="–¢—Ä–∞—Å—Å–∞")
scatter = ax1.scatter(track_x[::50], track_y[::50], c=speed_curr[::50], cmap='plasma', s=20)
ax1.set_aspect('equal')
ax1.axis('off')
plt.colorbar(scatter, ax=ax1, label="–°–∫–æ—Ä–æ—Å—Ç—å (–∫–º/—á)")
st.pyplot(fig1)

# --- –ì—Ä–∞—Ñ–∏–∫ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –¥–µ–ª—å—Ç–∞-—Ç–∞–π–º ---
st.markdown("### üìà –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ delta-time")
fig2, ax2 = plt.subplots(figsize=(10, 4))
ax2.plot(distance, speed_ref, label="–≠—Ç–∞–ª–æ–Ω", color="green", linewidth=2)
ax2.plot(distance, speed_curr, label=f"–ö—Ä—É–≥ {lap}", color="red", linewidth=1.5)
ax2.set_ylabel("–°–∫–æ—Ä–æ—Å—Ç—å (–∫–º/—á)")
ax2.set_xlabel("–î–∏—Å—Ç–∞–Ω—Ü–∏—è (–º)")
ax2.legend()

ax3 = ax2.twinx()
ax3.fill_between(distance[::20], delta_time[::20], color="orange", alpha=0.3, label="Delta-time")
ax3.set_ylabel("Delta-time (—Å)")
ax3.legend(loc="upper right")
st.pyplot(fig2)

# --- –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —à–∏–Ω –ø–æ –∫—Ä—É–≥–∞–º ---
st.markdown("### üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —à–∏–Ω (–¥–∏–Ω–∞–º–∏–∫–∞)")
laps = np.arange(1, 16)
temps = 85 + 2.2 * laps + np.random.randn(15) * 3
fig3, ax4 = plt.subplots(figsize=(8, 3))
ax4.plot(laps, temps, marker='o', color='red', linewidth=2)
ax4.axhspan(90, 110, color='green', alpha=0.1, label="–û–ø—Ç–∏–º–∞–ª—å–Ω–æ")
ax4.axhspan(110, 130, color='red', alpha=0.1, label="–ü–µ—Ä–µ–≥—Ä–µ–≤")
ax4.set_ylabel("–¢–µ–º–ø. –ü–ü–® (¬∞C)")
ax4.set_xlabel("–ö—Ä—É–≥")
ax4.set_xticks(laps[::2])
ax4.grid(True, alpha=0.3)
ax4.legend()
st.pyplot(fig3)

# --- –ü–æ–¥–≤–∞–ª ---
st.markdown("---")
st.markdown("üîß *–°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏ | –ö–æ–º–∞–Ω–¥–∞: [–¢–≤–æ—ë –∏–º—è]*")